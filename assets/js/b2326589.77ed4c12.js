"use strict";(self.webpackChunkaka_docs=self.webpackChunkaka_docs||[]).push([[497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=l(n),m=a,f=c["".concat(u,".").concat(m)]||c[m]||d[m]||s;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},940:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:1},o="Requests",i={unversionedId:"the-basic/request",id:"the-basic/request",title:"Requests",description:"The Requests page provides information on how the system handles HTTP requests using Aka. System loads the",source:"@site/docs/the-basic/request.md",sourceDirName:"the-basic",slug:"/the-basic/request",permalink:"/aka.docs/docs/the-basic/request",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Middleware",permalink:"/aka.docs/docs/the-basic/middleware"},next:{title:"Code Sandbox",permalink:"/aka.docs/docs/category/code-sandbox"}},u={},l=[{value:"GET requests",id:"get-requests",level:2},{value:"POST requests",id:"post-requests",level:2},{value:"PARAMS requests",id:"params-requests",level:2},{value:"MULTIPLE requests",id:"multiple-requests",level:2}],p={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"requests"},"Requests"),(0,a.kt)("p",null,"The Requests page provides information on how the system handles HTTP requests using Aka. System loads the\nGET, POST, PATCH, and DELETE routes based on the default functions exported in the routing files."),(0,a.kt)("h2",{id:"get-requests"},"GET requests"),(0,a.kt)("p",null,'you can define a default function named "get" which is equal to a function that takes\nthree\nparameters: the req object of request, the res object, and an optional next function.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=/route/example.js",title:"/route/example.js"},"export default function get(req, res) {\n\n    const {...data} = req.query; // get get params\n\n    res.json({\n        method: 'GET',\n        data: data,\n    })\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The Requests explains how to handle GET requests using this method, as well as providing examples of how to use\nparameters and query strings in\nyour requests.")),(0,a.kt)("h2",{id:"post-requests"},"POST requests"),(0,a.kt)("p",null,'you can define a default function named "post" which is equal to a function that takes\nthree\nparameters: the req object of request, the res object, and an optional next function.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=/route/example.js",title:"/route/example.js"},"export default function post(req, res) {\n\n    const {...data} = req.body; // get post params\n\n    res.json({\n        method: 'POST',\n        data: data,\n    })\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The Requests explains how to handle POST requests using this method, as well as providing examples of how to use\nparameters and query strings in\nyour requests.")),(0,a.kt)("h2",{id:"params-requests"},"PARAMS requests"),(0,a.kt)("p",null,'you can define a default function named "get","post" or "all" which is equal to a function that takes\nthree\nparameters: the req object of request, the res object, and an optional next function.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=/route/[example].js",title:"/route/[example].js"},"export default function get(req, res) {\n\n    const {example} = req.params; // get route params\n\n    res.json({\n        method: 'POST',\n        data: example,\n    })\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The Requests explains how to handle PARAMS requests using this method, as well as providing examples of how to use\nparameters and query strings in\nyour requests.")),(0,a.kt)("h2",{id:"multiple-requests"},"MULTIPLE requests"),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},'Each file that is placed in the routes folder can support multiple HTTP methods. This is possible by\nexporting default functions that are named  "all", equals (e.g. GET, POST, PUT, DELETE).\nBy using this approach, it is possible to define and manage all the routes for a specific resource in a single\nfile.')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default function all(req, res) {\n    res.json({\n        method: req.method,\n    })\n}\n")))}d.isMDXComponent=!0}}]);