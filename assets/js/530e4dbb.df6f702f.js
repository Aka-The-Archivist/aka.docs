"use strict";(self.webpackChunkaka_docs=self.webpackChunkaka_docs||[]).push([[951],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=d(a),u=i,h=p["".concat(s,".").concat(u)]||p[u]||c[u]||r;return a?n.createElement(h,o(o({ref:t},m),{},{components:a})):n.createElement(h,o({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4729:(e,t,a)=>{a.d(t,{_:()=>i,d:()=>n});const n=function(e){void 0===e&&(e="main");for(var t=arguments.length,a=new Array(t>1?t-1:0),n=1;n<t;n++)a[n-1]=arguments[n];return`https://codesandbox.io/embed/github/Aka-The-Archivist/aka.backend/${e}?module=${a.join(",")}&autoresize=1&moduleview=1&hidenavigation=1&editorsize=100&expanddevtools=1&theme=dark&view=split&previewwindow=console`},i=function(){return fetch(...arguments).then((e=>e.json()))}},2296:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var n=a(7462),i=(a(7294),a(3905)),r=a(4729);const o={sidebar_position:4},l="Email System",s={unversionedId:"code-examples/sendmail",id:"code-examples/sendmail",title:"Email System",description:"[aka.emails] is a powerful npm package that integrates the functionalities of popular mailing libraries such as Node Mailer",source:"@site/docs/code-examples/sendmail.mdx",sourceDirName:"code-examples",slug:"/code-examples/sendmail",permalink:"/aka.docs/docs/code-examples/sendmail",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Atlas MongoDB",permalink:"/aka.docs/docs/code-examples/mongo-db"}},d={},m=[{value:"Here are some key features of aka.emails:",id:"here-are-some-key-features-of-akaemails",level:3},{value:"CodeSandbox repo",id:"codesandbox-repo",level:2},{value:"Setting Up the Project",id:"setting-up-the-project",level:2},{value:"Create HTML email",id:"create-html-email",level:2},{value:"Nodemailer Driver",id:"nodemailer-driver",level:3},{value:"SendGrid Driver",id:"sendgrid-driver",level:3}],p={toc:m},c="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"email-system"},"Email System"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"[aka.emails]")," is a powerful npm package that integrates the functionalities of popular mailing libraries such as Node Mailer\nand SendGrid, enhancing them with a ",(0,i.kt)("strong",{parentName:"p"},"Handlebars (.hbs)")," templating system. This module is part of the Aka Backend framework,\nbut can also be used independently to provide a robust and flexible email sending solution."),(0,i.kt)("p",null,"By integrating with Node Mailer and SendGrid, aka.emails brings the best of both worlds into a single, easy-to-use interface.\nWhether you need to send a few emails or thousands, whether it's a simple text message or a complex HTML layout, ",(0,i.kt)("strong",{parentName:"p"},"aka.emails")," has you covered."),(0,i.kt)("p",null,"The integration with Handlebars adds an additional layer of power and flexibility. Handlebars is a popular templating engine\nthat allows you to create dynamic content easily. With aka.emails, you can define your email templates in .hbs files,\nwhich can then be filled with data at runtime. This makes it extremely easy to create personalized emails for each recipient."),(0,i.kt)("h3",{id:"here-are-some-key-features-of-akaemails"},"Here are some key features of aka.emails:"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Integration with Node Mailer and SendGrid"),": Leverage the power and flexibility of these popular mailing libraries directly from your Aka Backend application.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Handlebars templating"),": Create dynamic, personalized emails with ease using .hbs templates.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Flexibility"),": aka.emails can be used as a standalone package or as part of the Aka Backend framework, depending on your needs.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Ease of use"),": Despite its power, aka.emails maintains a simple and intuitive interface that makes it easy to send emails, even for developers who are new to Node.js or backend development.")))),(0,i.kt)("p",null,"In the following sections of this documentation, we will explore in detail how to install and use aka.emails, including\nexamples of sending both text and HTML emails, creating and using .hbs templates, and more. Whether you're an experienced\ndeveloper or just getting started, we're confident that aka.emails can make your email-sending tasks easier and more efficient."),(0,i.kt)("h2",{id:"codesandbox-repo"},"CodeSandbox repo"),(0,i.kt)("p",null,"CodeSandbox is an online development platform that allows you to create, edit, and collaborate on web application\nprojects using popular web technologies such as React, Vue, Angular, and more. With CodeSandbox, you can quickly create\nsandbox environments where you can experiment with code, test your ideas, and share your work with others."),(0,i.kt)("iframe",{src:(0,r.d)("emails",["/routes/email/node.js","/routes/email/sendgrid.js","/emails/example.code.hbs"]),style:{width:"100%",height:"500px",border:"0",borderRadius:"8px",overflow:"hidden"}}),(0,i.kt)("h2",{id:"setting-up-the-project"},"Setting Up the Project"),(0,i.kt)("p",null,"Run the following command in your shell to install the driver in your project directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install aka.emails@latest\n\n")),(0,i.kt)("p",null,"This command performs the following actions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Downloads the aka.emails package and the dependencies it requires"),(0,i.kt)("li",{parentName:"ul"},"Saves the package in the node_modules directory")),(0,i.kt)("p",null,"Records the dependency information in the package.json file"),(0,i.kt)("h2",{id:"create-html-email"},"Create HTML email"),(0,i.kt)("p",null,"In this example, we will create a Handlebars (.hbs) template for sending a confirmation code email.\nThe aka.emails module uses these templates to generate dynamic, personalized emails."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Create the /emails Directory"))),(0,i.kt)("p",null,"The first step is to create a directory in your project root named /emails. This is where we'll store our .hbs templates."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Create the Handlebars Template"))),(0,i.kt)("p",null,"Next, create a new file in the /emails directory named confirmation.hbs. This file will contain the HTML and Handlebars code for our email template."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-handlebars",metastring:"title=/emails/example.code.hbs",title:"/emails/example.code.hbs"},'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\n        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml" lang="en">\n<head>\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n    <meta name="supported-color-schemes" content="light">\n    <meta name="color-scheme" content="light">\n    <title>New Awesome Email</title>\n    <style>\n        @media only screen and (max-width: 600px) {\n            .inner-body {\n                width: 100% !important;\n            }\n\n            .footer {\n                width: 100% !important;\n            }\n        }\n\n        @media only screen and (max-width: 500px) {\n            .button {\n                width: 100% !important;\n            }\n        }\n    </style>\n</head>\n<body style="box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Helvetica, Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; position: relative; -webkit-text-size-adjust: none; background-color: #ffffff; color: #718096; height: 100%; line-height: 1.4; margin: 0; padding: 0; width: 100% !important;">\n<div style="background-color: #ffffff;">\n    <div style="padding: 20px 0; margin: 0 auto; max-width: 600px;">\n        <table style="margin: 30px auto 0; font-size: 16px; max-width: 450px;">\n            <tbody>\n            <tr>\n                <td style="color: #1a1a1a; line-height: 22px;">\n                    <p style="margin-top: 20px;">\n                        Below is the confirmation code to access on <b>Aka The Archivist</b>.\n                    </p>\n                    <p style="margin-top: 20px;">\n                      <span style="font-size: 16px;">\n                          <b>[{{code}}]</b>\n                      </span>\n                    </p>\n                    <i style="margin-top: 20px;">\n                        If you have not made this request, you can safely ignore this message.\n                    </i>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <table style="margin: 30px auto; border-top: 1px dashed #dadada; width: 450px;">\n            <tbody>\n            <tr>\n                <td style="color: rgba(26, 26, 26, 0.6); padding-top: 15px;">\n                    <p style="font-size: 12px; text-align: left;">\n                        Copyright 2023 | <b>Aka The Archivist</b>\n                    </p>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n</body>\n</html>\n')),(0,i.kt)("h3",{id:"nodemailer-driver"},"Nodemailer Driver"),(0,i.kt)("p",null,"Now that our template is ready, we can use it to send an email. Here's how you can do this with the aka.emails module:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=/routes/email/node.js",title:"/routes/email/node.js"},"import {NodeMailer} from \"aka.emails\";\n\n/**\n *\n * @param req\n * @param res\n */\nexport default async function post(req, res) {\n\n        // create mail instance\n        const mail = new NodeMailer('test@example.com');\n\n        // set sendgrid from address\n        mail.from('no-reply@example.com')\n\n        // set subject mail\n        mail.subject(`\ud83d\udd10 Confirm code to continue authentication`);\n\n        // send async or await email with template\n        await mail.send('example.code', {code:3344585}).then((message) =>\n            console.log(message)\n        );\n\n}\n")),(0,i.kt)("h3",{id:"sendgrid-driver"},"SendGrid Driver"),(0,i.kt)("p",null,"Now that our template is ready, we can use it to send an email. Here's how you can do this with the aka.emails module:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=/routes/email/sendgrid.js",title:"/routes/email/sendgrid.js"},"import {SendGridMail} from \"aka.emails\";\n\n/**\n *\n * @param req\n * @param res\n */\nexport default async function post(req, res) {\n\n        // create mail instance\n        const mail = new SendGridMail('test@example.com');\n\n        // set sendgrid api key\n        mail.setApiKey('SENDGRID_API_KEY')\n\n        // set sendgrid from address\n        mail.from('no-reply@example.com')\n\n        // set subject mail\n        mail.subject(`\ud83d\udd10 Confirm code to continue authentication`);\n\n        // send async or await email with template\n        await mail.send('example.code', {code:3344585}).then((message) =>\n            console.log(message)\n        );\n\n}\n")))}u.isMDXComponent=!0}}]);